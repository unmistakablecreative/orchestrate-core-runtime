{"tool": "json_manager", "action": "__tool__", "script_path": "tools/json_manager.py", "locked": false, "referral_unlock_cost": 0, "description": "Save and manage tasks, notes, ideas, or any other structured info across your workspace."}
{"tool": "system_settings", "action": "__tool__", "script_path": "tools/system_settings.py", "locked": false, "referral_unlock_cost": 0, "description": "Manage core config — tools, memory files, routing, and credentials."}
{"tool": "file_ops_tool", "action": "__tool__", "script_path": "tools/file_ops_tool.py", "locked": false, "referral_unlock_cost": 0, "description": "Move, rename, or resolve container-local files across Orchestrate volumes."}
{"tool": "unlock_tool", "action": "__tool__", "script_path": "tools/unlock_tool.py", "locked": false, "referral_unlock_cost": 0, "description": "Manually unlock tools using credits or referral triggers."}
{"tool": "mash_tool", "action": "__tool__", "script_path": "tools/mash_tool.py", "locked": false, "referral_unlock_cost": 0, "description": "Play the classic MASH game — generate a random, funny future."}
{"tool": "outline_editor", "action": "__tool__", "script_path": "tools/outline_editor.py", "locked": true, "referral_unlock_cost": 2, "description": "Create structured content documents with sections, links, and collections."}
{"tool": "mem_tool", "action": "__tool__", "script_path": "tools/mem_tool.py", "locked": true, "referral_unlock_cost": 4, "description": "Capture personal insights or notes and sync them into Mem."}
{"tool": "readwise_tool", "action": "__tool__", "script_path": "tools/readwise_tool.py", "locked": true, "referral_unlock_cost": 4, "description": "Import and explore highlights from your synced Readwise library."}
{"tool": "article_builder_tool", "action": "__tool__", "script_path": "tools/article_builder.py", "locked": true, "referral_unlock_cost": 6, "description": "Turn structured outlines into fully formatted, image-injected blog articles."}
{"tool": "buffer_engine", "action": "__tool__", "script_path": "tools/buffer_engine.py", "locked": true, "referral_unlock_cost": 6, "description": "Schedule and auto-publish content to social media platforms."}
{"tool": "github_tool_universal", "action": "__tool__", "script_path": "tools/github_tool_universal.py", "locked": true, "referral_unlock_cost": 8, "description": "Manage repos, commits, and pushes to GitHub from within GPT."}
{"tool": "ideogram_tool", "action": "__tool__", "script_path": "tools/ideogram_tool.py", "locked": true, "referral_unlock_cost": 8, "description": "Generate beautiful AI-driven images for documents or social posts."}
{"tool": "composer", "action": "__tool__", "script_path": "tools/composer.py", "locked": true, "referral_unlock_cost": 12, "description": "Build and dispatch multi-step automations by chaining tool actions."}
{"tool": "terminal", "action": "__tool__", "script_path": "tools/terminal.py", "locked": true, "referral_unlock_cost": 14, "description": "Run safe shell commands, tail logs, or stream live output."}
{"tool": "code_editor", "action": "__tool__", "script_path": "tools/code_editor.py", "locked": true, "referral_unlock_cost": 24, "description": "Create, modify, or patch Python-based tools and scripts."}
{"tool": "check_credits", "action": "__tool__", "script_path": "tools/check_credits.py", "locked": false, "referral_unlock_cost": 0, "description": "View your remaining unlock credits and tools currently unlocked."}
{"tool": "nylasinbox", "action": "__tool__", "script_path": "tools/nylasinbox.py", "locked": true, "referral_unlock_cost": 18, "description": "Read, send, and manage emails directly inside your system using structured API control."}
{"tool": "notion_tool", "action": "__tool__", "script_path": "tools/notion_tool.py", "locked": true, "referral_unlock_cost": 2, "description": "Create pages, update tasks, or search workspace content using Orchestrate-powered flows."}
{"tool": "article_builder_tool", "action": "add_blog_section", "script_path": "tools/article_builder.py", "params": ["filename", "section_id", "text", "image_url"], "example": {"tool_name": "article_builder_tool", "action": "add_blog_section", "params": {"filename": "demo_article.json", "section_id": "intro", "text": "Welcome to the blog.", "image_url": "https://example.com/cover.png"}}}
{"tool": "article_builder_tool", "action": "assemble_article", "script_path": "tools/article_builder.py", "params": ["filename"], "example": {"tool_name": "article_builder_tool", "action": "assemble_article", "params": {"filename": "demo_article.json"}}}
{"tool": "article_builder_tool", "action": "create_article_blueprint", "script_path": "tools/article_builder.py", "params": ["filename"], "example": {"tool_name": "article_builder_tool", "action": "create_article_blueprint", "params": {"filename": "demo_article.json"}}}
{"tool": "article_builder_tool", "action": "write_article_to_file", "script_path": "tools/article_builder.py", "params": ["filename"], "example": {"tool_name": "article_builder_tool", "action": "write_article_to_file", "params": {"filename": "demo_article.json"}}}
{"tool": "buffer_engine", "action": "buffer_loop", "script_path": "tools/buffer_engine.py", "params": [], "example": {"tool_name": "buffer_engine", "action": "buffer_loop", "params": {}}}
{"tool": "buffer_engine", "action": "post_to_platform", "script_path": "tools/buffer_engine.py", "params": ["content", "link", "image_url"], "example": {"tool_name": "buffer_engine", "action": "post_to_platform", "params": {"content": "This is a tweet.", "link": "https://example.com", "image_url": "https://img.url"}}}
{"tool": "code_editor", "action": "add_endpoint_to_fastapi_file", "script_path": "tools/code_editor.py", "params": ["filename", "method", "route", "function_name", "body"], "example": {"tool_name": "code_editor", "action": "add_endpoint_to_fastapi_file", "params": {"filename": "tools/server.py", "method": "get", "route": "/ping", "function_name": "ping", "body": "return {'message': 'pong'}"}}}
{"tool": "code_editor", "action": "add_function_to_blueprint", "script_path": "tools/code_editor.py", "params": ["filename", "function_name", "params", "body"], "example": {"tool_name": "code_editor", "action": "add_function_to_blueprint", "params": {"filename": "example_tool.json", "function_name": "say_hello", "params": ["name"], "body": "print(f'Hello, {name}!')"}}}
{"tool": "code_editor", "action": "add_function_to_code_file", "script_path": "tools/code_editor.py", "params": ["filename", "function_name", "params", "body"], "example": {"tool_name": "code_editor", "action": "add_function_to_code_file", "params": {"filename": "tools/example_tool.py", "function_name": "say_hi", "params": ["name"], "body": "print(f'Hi, {name}!')"}}}
{"tool": "code_editor", "action": "add_import_statement_to_file", "script_path": "tools/code_editor.py", "params": ["filename", "import_statement"], "example": {"tool_name": "code_editor", "action": "add_import_statement_to_file", "params": {"filename": "tools/example_tool.py", "import_statement": "import os"}}}
{"tool": "code_editor", "action": "append_code_to_file", "script_path": "tools/code_editor.py", "params": ["filename", "code"], "example": {"tool_name": "code_editor", "action": "append_code_to_file", "params": {"filename": "tools/example_tool.py", "code": "print('Hello, world!')"}}}
{"tool": "code_editor", "action": "compile_blueprint_to_script_file", "script_path": "tools/code_editor.py", "params": ["json_path"], "example": {"tool_name": "code_editor", "action": "compile_blueprint_to_script_file", "params": {"json_path": "code_blueprints/example_tool.json"}}}
{"tool": "code_editor", "action": "create_code_blueprint", "script_path": "tools/code_editor.py", "params": ["filename", "imports"], "example": {"tool_name": "code_editor", "action": "create_code_blueprint", "params": {"filename": "example_tool.json", "imports": ["import os", "import json"]}}}
{"tool": "code_editor", "action": "patch_code_function_in_file", "script_path": "tools/code_editor.py", "params": ["filename", "function_name", "params", "body"], "example": {"tool_name": "code_editor", "action": "patch_code_function_in_file", "params": {"filename": "tools/example_tool.py", "function_name": "greet", "params": ["name"], "body": "print(f'Hi, {name}!')"}}}
{"tool": "code_editor", "action": "read_code_file", "script_path": "tools/code_editor.py", "params": ["path"], "example": {"tool_name": "code_editor", "action": "read_code_file", "params": {"path": "tools/example_tool.py"}}}
{"tool": "code_editor", "action": "remove_function_from_code_file", "script_path": "tools/code_editor.py", "params": ["filename", "function_name"], "example": {"tool_name": "code_editor", "action": "remove_function_from_code_file", "params": {"filename": "tools/example_tool.py", "function_name": "greet"}}}
{"tool": "code_editor", "action": "rename_function_in_file", "script_path": "tools/code_editor.py", "params": ["filename", "old_name", "new_name"], "example": {"tool_name": "code_editor", "action": "rename_function_in_file", "params": {"filename": "tools/example_tool.py", "old_name": "greet", "new_name": "say_hi"}}}
{"tool": "code_editor", "action": "replace_in_code_file", "script_path": "tools/code_editor.py", "params": ["filename", "old_text", "new_text"], "example": {"tool_name": "code_editor", "action": "replace_in_code_file", "params": {"filename": "tools/example_tool.py", "old_text": "print('Hello')", "new_text": "print('Hi')"}}}
{"tool": "code_editor", "action": "replace_tail_from_line", "script_path": "tools/code_editor.py", "params": ["filename", "start_pattern", "replacement"], "example": {"tool_name": "code_editor", "action": "replace_tail_from_line", "params": {"filename": "tools/example_tool.py", "start_pattern": "if __name__ == '__main__'", "replacement": "# new main block"}}}
{"tool": "code_editor", "action": "update_function_in_blueprint_file", "script_path": "tools/code_editor.py", "params": ["filename", "function_name", "params", "body"], "example": {"tool_name": "code_editor", "action": "update_function_in_blueprint_file", "params": {"filename": "example_tool.json", "function_name": "say_hello", "params": ["name"], "body": "print(f'Updated hello to {name} again.')"}}}
{"tool": "file_finder", "action": "search_files", "script_path": "tools/file_finder.py", "params": ["keyword"], "example": {"tool_name": "file_finder", "action": "search_files", "params": {"keyword": "glucose"}}}
{"tool": "github_tool_universal", "action": "init_repo", "script_path": "tools/github_tool_universal.py", "params": ["path"], "example": {"tool_name": "github_tool_universal", "action": "init_repo", "params": {"path": "./repo"}}}
{"tool": "github_tool_universal", "action": "status", "script_path": "tools/github_tool_universal.py", "params": ["path"], "example": {"tool_name": "github_tool_universal", "action": "status", "params": {"path": "./repo"}}}
{"tool": "github_tool_universal", "action": "clone_repo", "script_path": "tools/github_tool_universal.py", "params": ["url", "path"], "example": {"tool_name": "github_tool_universal", "action": "clone_repo", "params": {"url": "https://github.com/your/repo.git", "path": "./repo"}}}
{"tool": "github_tool_universal", "action": "set_remote", "script_path": "tools/github_tool_universal.py", "params": ["path", "url"], "example": {"tool_name": "github_tool_universal", "action": "set_remote", "params": {"path": "./repo", "url": "https://github.com/your/repo.git"}}}
{"tool": "github_tool_universal", "action": "add_files", "script_path": "tools/github_tool_universal.py", "params": ["path", "files"], "example": {"tool_name": "github_tool_universal", "action": "add_files", "params": {"path": "./repo", "files": ["file1.py", "file2.txt"]}}}
{"tool": "github_tool_universal", "action": "commit_repo", "script_path": "tools/github_tool_universal.py", "params": ["path", "message"], "example": {"tool_name": "github_tool_universal", "action": "commit_repo", "params": {"path": "./repo", "message": "Initial commit"}}}
{"tool": "github_tool_universal", "action": "push_repo", "script_path": "tools/github_tool_universal.py", "params": ["path", "branch"], "example": {"tool_name": "github_tool_universal", "action": "push_repo", "params": {"path": "./repo", "branch": "main"}}}
{"tool": "github_tool_universal", "action": "pull_repo", "script_path": "tools/github_tool_universal.py", "params": ["path", "branch"], "example": {"tool_name": "github_tool_universal", "action": "pull_repo", "params": {"path": "./repo", "branch": "main"}}}
{"tool": "github_tool_universal", "action": "archive_repo", "script_path": "tools/github_tool_universal.py", "params": ["path"], "example": {"tool_name": "github_tool_universal", "action": "archive_repo", "params": {"path": "./repo"}}}
{"tool": "github_tool_universal", "action": "list_repos", "script_path": "tools/github_tool_universal.py", "params": [], "example": {"tool_name": "github_tool_universal", "action": "list_repos", "params": {}}}
{"tool": "ideogram_tool", "action": "generate_image", "script_path": "tools/ideogram_tool.py", "params": ["input", "options"], "example": {"tool_name": "ideogram_tool", "action": "generate_image", "params": {"input": "A robot in a neon city", "options": {"aspect_ratio": "ASPECT_16_9", "model": "V_2"}}}}
{"tool": "json_manager", "action": "add_json_entry", "script_path": "tools/json_manager.py", "params": ["filename", "entry_key", "entry_data"], "example": {"tool_name": "json_manager", "action": "add_json_entry", "params": {"filename": "gray_content.json", "entry_key": "adhd_ep1", "entry_data": {"title": "Rituals for Late-Diagnosed Adults"}}}}
{"tool": "json_manager", "action": "create_json_file", "script_path": "tools/json_manager.py", "params": ["filename"], "example": {"tool_name": "json_manager", "action": "create_json_file", "params": {"filename": "gray_content.json"}}}
{"tool": "json_manager", "action": "list_json_entries", "script_path": "tools/json_manager.py", "params": ["filename"], "example": {"tool_name": "json_manager", "action": "list_json_entries", "params": {"filename": "gray_content.json"}}}
{"tool": "json_manager", "action": "read_json_entry", "script_path": "tools/json_manager.py", "params": ["filename", "entry_key"], "example": {"tool_name": "json_manager", "action": "read_json_entry", "params": {"filename": "gray_content.json", "entry_key": "adhd_ep1"}}}
{"tool": "json_manager", "action": "read_json_file", "script_path": "tools/json_manager.py", "params": ["filename"], "example": {"tool_name": "json_manager", "action": "read_json_file", "params": {"filename": "gray_content.json"}}}
{"tool": "json_manager", "action": "update_json_entry", "script_path": "tools/json_manager.py", "params": ["filename", "entry_key", "new_data"], "example": {"tool_name": "json_manager", "action": "update_json_entry", "params": {"filename": "gray_content.json", "entry_key": "adhd_ep1", "new_data": {"status": "published"}}}}
{"tool": "mash_tool", "action": "spin_game", "script_path": "tools/mash_tool.py", "params": ["home", "car", "career", "partner", "spin"], "example": {"tool_name": "mash_tool", "action": "spin_game", "params": {"home": ["Mansion"], "car": ["Tesla"], "career": ["Pilot"], "partner": ["Zendaya"], "spin": 4}}}
{"tool": "mem_tool", "action": "__tool__", "script_path": "tools/mem_tool.py"}
{"tool": "mem_tool", "action": "create_mem", "script_path": "tools/mem_tool.py", "params": ["input"], "example": {"tool_name": "mem_tool", "action": "create_mem", "params": {"input": "This is a test note for Mem."}}}
{"tool": "notion_tool", "action": "create_page", "script_path": "tools/notion_tool.py", "params": ["title", "database_id"], "example": {"tool_name": "notion_tool", "action": "create_page", "params": {"title": "New Entry", "database_id": "content_db"}}}
{"tool": "notion_tool", "action": "create_page", "script_path": "tools/notion_tool.py", "params": ["title", "parent_page_id"], "example": {"tool_name": "notion_tool", "action": "create_page", "params": {"title": "Standalone Page", "parent_page_id": "project_container"}}}
{"tool": "notion_tool", "action": "create_database", "script_path": "tools/notion_tool.py", "params": ["alias", "parent_page_id", "title", "properties"], "example": {"tool_name": "notion_tool", "action": "create_database", "params": {"alias": "project_tasks", "parent_page_id": "project_container", "title": "Task Tracker", "properties": {"Name": {"title": {}},"Status": {"select": {"options": [{"name": "Todo", "color": "red"}, {"name": "In Progress", "color": "yellow"}, {"name": "Done", "color": "green"}]}}}}}}
{"tool": "notion_tool", "action": "update_page", "script_path": "tools/notion_tool.py", "params": ["page_id", "properties"], "example": {"tool_name": "notion_tool", "action": "update_page", "params": {"page_id": "some_page_id", "properties": {"Status": {"select": {"name": "In Progress"}}}}}}
{"tool": "notion_tool", "action": "append_block_children", "script_path": "tools/notion_tool.py", "params": ["block_id", "children"], "example": {"tool_name": "notion_tool", "action": "append_block_children", "params": {"block_id": "some_block", "children": [{"object": "block", "type": "paragraph", "paragraph": {"rich_text": [{"text": {"content": "Hello from Orchestrate"}}]}}]}}}
{"tool": "notion_tool", "action": "search", "script_path": "tools/notion_tool.py", "params": ["query", "filter", "sort", "page_size"], "example": {"tool_name": "notion_tool", "action": "search", "params": {"query": "Projects", "filter": {"property": "object", "value": "page"}, "sort": {"direction": "descending", "timestamp": "last_edited_time"}, "page_size": 5}}}
{"tool": "nylasinbox", "action": "archive_email", "script_path": "tools/nylasinbox.py", "params": ["message_id"], "example": {"tool_name": "nylasinbox", "action": "archive_email", "params": {"message_id": "abc123"}}}
{"tool": "nylasinbox", "action": "batch_archive_emails", "script_path": "tools/nylasinbox.py", "params": ["message_ids"], "example": {"tool_name": "nylasinbox", "action": "batch_archive_emails", "params": {"message_ids": ["message_id_1", "message_id_2"]}}}
{"tool": "nylasinbox", "action": "check_email", "script_path": "tools/nylasinbox.py", "params": [], "example": {"tool_name": "nylasinbox", "action": "check_email", "params": {}}}
{"tool": "nylasinbox", "action": "create_folder", "script_path": "tools/nylasinbox.py", "params": ["name"], "example": {"tool_name": "nylasinbox", "action": "create_folder", "params": {"name": "Archive2025"}}}
{"tool": "nylasinbox", "action": "list_folders", "script_path": "tools/nylasinbox.py", "params": [], "example": {"tool_name": "nylasinbox", "action": "list_folders", "params": {}}}
{"tool": "nylasinbox", "action": "open_message", "script_path": "tools/nylasinbox.py", "params": ["message_id"], "example": {"tool_name": "nylasinbox", "action": "open_message", "params": {"message_id": "abc123"}}}
{"tool": "nylasinbox", "action": "search_messages", "script_path": "tools/nylasinbox.py", "params": ["subject", "from_email"], "example": {"tool_name": "nylasinbox", "action": "search_messages", "params": {"subject": "invoice", "from_email": "billing@example.com"}}}
{"tool": "nylasinbox", "action": "send_email", "script_path": "tools/nylasinbox.py", "params": ["to", "subject", "body", "is_html"], "example": "{ \"tool_name\": \"nylasinbox\", \"action\": \"send_email\", \"params\": { \"to\": \"someone@example.com\", \"subject\": \"Testing Email\", \"body\": \"<p>This is a <strong>test</strong> email sent with <code>send_email</code> template.</p>\", \"is_html\": true } }"}
{"tool": "outline_editor", "action": "append_section", "script_path": "tools/outline_editor.py", "params": ["doc_id", "new_text"], "example": {"tool_name": "outline_editor", "action": "append_section", "params": {"doc_id": "abc123", "new_text": "## New Section\nText goes here."}}}
{"tool": "outline_editor", "action": "create_collection", "script_path": "tools/outline_editor.py", "params": ["name", "description", "permission", "icon", "color", "sharing"], "example": {"tool_name": "outline_editor", "action": "create_collection", "params": {"name": "Demo Collection", "description": "For testing doc creation", "permission": "read_write", "icon": "\ud83d\udcd8", "color": "#3498db", "sharing": true}}}
{"tool": "outline_editor", "action": "create_doc", "script_path": "tools/outline_editor.py", "params": ["title", "content", "collectionId", "parentDocumentId"], "example": {"tool_name": "outline_editor", "action": "create_doc", "params": {"title": "Test Title", "content": "Some content here.", "collectionId": "Inbox", "parentDocumentId": null}}}
{"tool": "outline_editor", "action": "delete_collection", "script_path": "tools/outline_editor.py", "params": ["collection_id"], "example": {"tool_name": "outline_editor", "action": "delete_collection", "params": {"collection_id": "abc123"}}}
{"tool": "outline_editor", "action": "delete_doc", "script_path": "tools/outline_editor.py", "params": ["doc_id"], "example": {"tool_name": "outline_editor", "action": "delete_doc", "params": {"doc_id": "abc123"}}}
{"tool": "outline_editor", "action": "export_doc", "script_path": "tools/outline_editor.py", "params": ["doc_id", "filename"], "example": {"tool_name": "outline_editor", "action": "export_doc", "params": {"doc_id": "abc123", "filename": "blog.md"}}}
{"tool": "outline_editor", "action": "get_doc", "script_path": "tools/outline_editor.py", "params": ["doc_id"], "example": {"tool_name": "outline_editor", "action": "get_doc", "params": {"doc_id": "abc123"}}}
{"tool": "outline_editor", "action": "get_url", "script_path": "tools/outline_editor.py", "params": ["doc_id"], "example": {"tool_name": "outline_editor", "action": "get_url", "params": {"doc_id": "abc123"}}}
{"tool": "outline_editor", "action": "import_doc_from_file", "script_path": "tools/outline_editor.py", "params": ["file_path", "collectionId", "parentDocumentId", "template", "publish"], "example": {"tool_name": "outline_editor", "action": "import_doc_from_file", "params": {"file_path": "compiled_posts/post.md", "collectionId": "abc123", "parentDocumentId": null, "template": false, "publish": true}}}
{"tool": "outline_editor", "action": "list_docs", "script_path": "tools/outline_editor.py", "params": ["limit", "offset", "sort", "direction"], "example": {"tool_name": "outline_editor", "action": "list_docs", "params": {"limit": 5, "offset": 0, "sort": "createdAt", "direction": "DESC"}}}
{"tool": "outline_editor", "action": "move_doc", "script_path": "tools/outline_editor.py", "params": ["doc_id", "collectionId", "parentDocumentId"], "example": {"tool_name": "outline_editor", "action": "move_doc", "params": {"doc_id": "xyz789", "collectionId": "abc123", "parentDocumentId": ""}}}
{"tool": "outline_editor", "action": "search_docs", "script_path": "tools/outline_editor.py", "params": ["query", "limit", "offset"], "example": {"tool_name": "outline_editor", "action": "search_docs", "params": {"query": "semantic execution", "limit": 5, "offset": 0}}}
{"tool": "outline_editor", "action": "update_doc", "script_path": "tools/outline_editor.py", "params": ["doc_id", "title", "text", "append", "publish"], "example": {"tool_name": "outline_editor", "action": "update_doc", "params": {"doc_id": "abc123", "title": "Updated Title", "text": "Appended text", "append": true, "publish": false}}}
{"tool": "read_file", "action": "read_file", "script_path": "tools/read_file.py", "params": ["filename"], "example": {"tool_name": "read_file", "action": "read_file", "params": {"filename": "calendar.json"}}}
{"tool": "readwise_tool", "action": "fetch_books", "script_path": "tools/readwise_tool.py", "params": ["page_size"], "example": {"tool_name": "readwise_tool", "action": "fetch_books", "params": {"page_size": 10}}}
{"tool": "readwise_tool", "action": "fetch_highlights", "script_path": "tools/readwise_tool.py", "params": ["book_title"], "example": {"tool_name": "readwise_tool", "action": "fetch_highlights", "params": {"book_title": "Atomic Habits"}}}
{"tool": "system_settings", "action": "add_action", "script_path": "tools/system_settings.py", "params": ["tool", "action", "script", "params", "example"], "example": {"tool_name": "system_settings", "action": "add_action", "params": {"tool": "json_manager", "action": "add_json_entry", "script": "tools/json_manager.py", "params": ["filename", "entry_key", "entry_data"], "example": {"tool_name": "json_manager", "action": "add_json_entry", "params": {"filename": "tasks.json", "entry_key": "task_1", "entry_data": {"title": "Sample"}}}}}}
{"tool": "system_settings", "action": "add_cli_route", "script_path": "tools/system_settings.py", "params": ["action_name", "command"], "example": {"tool_name": "system_settings", "action": "add_cli_route", "params": {"action_name": "fetch_josh_dm", "command": "bash slack_dm_tool.sh"}}}
{"tool": "system_settings", "action": "add_memory_file", "script_path": "tools/system_settings.py", "params": ["path"], "example": {"tool_name": "system_settings", "action": "add_memory_file", "params": {"path": "semantic_memory/srini_notes.json"}}}
{"tool": "system_settings", "action": "add_tool", "script_path": "tools/system_settings.py", "params": ["tool", "path"], "example": {"tool_name": "system_settings", "action": "add_tool", "params": {"tool": "my_tool", "path": "tools/my_tool.py"}}}
{"tool": "system_settings", "action": "build_working_memory", "script_path": "tools/system_settings.py", "params": [], "example": {"tool_name": "system_settings", "action": "build_working_memory", "params": {}}}
{"tool": "system_settings", "action": "list_actions", "script_path": "tools/system_settings.py", "params": ["tool"], "example": {"tool_name": "system_settings", "action": "list_actions", "params": {"tool": "json_manager"}}}
{"tool": "system_settings", "action": "list_cli_routes", "script_path": "tools/system_settings.py", "params": [], "example": {"tool_name": "system_settings", "action": "list_cli_routes", "params": {}}}
{"tool": "system_settings", "action": "list_memory_files", "script_path": "tools/system_settings.py", "params": [], "example": {"tool_name": "system_settings", "action": "list_memory_files", "params": {}}}
{"tool": "system_settings", "action": "list_supported_actions", "script_path": "tools/system_settings.py", "params": [], "example": {"tool_name": "system_settings", "action": "list_supported_actions", "params": {}}}
{"tool": "system_settings", "action": "list_tools", "script_path": "tools/system_settings.py", "params": [], "example": {"tool_name": "system_settings", "action": "list_tools", "params": {}}}
{"tool": "system_settings", "action": "remove_cli_route", "script_path": "tools/system_settings.py", "params": ["action_name"], "example": {"tool_name": "system_settings", "action": "remove_cli_route", "params": {"action_name": "fetch_josh_dm"}}}
{"tool": "system_settings", "action": "remove_memory_file", "script_path": "tools/system_settings.py", "params": ["path"], "example": {"tool_name": "system_settings", "action": "remove_memory_file", "params": {"path": "semantic_memory/srini_notes.json"}}}
{"tool": "system_settings", "action": "remove_tool", "script_path": "tools/system_settings.py", "params": ["tool"], "example": {"tool_name": "system_settings", "action": "remove_tool", "params": {"tool": "my_tool"}}}
{"tool": "system_settings", "action": "set_credential", "script_path": "tools/system_settings.py", "params": ["key", "value"], "example": {"tool_name": "system_settings", "action": "set_credential", "params": {"key": "OUTLINE_API_KEY", "value": "sk-xxx"}}}
{"tool": "terminal", "action": "check_safe", "script_path": "tools/terminal.py", "params": ["command"], "example": {"tool_name": "terminal", "action": "check_safe", "params": {"command": "ls -la"}}}
{"tool": "terminal", "action": "ls", "script_path": "tools/terminal.py", "params": ["path"], "example": {"tool_name": "terminal", "action": "ls", "params": {"path": "/Users/srinivas"}}}
{"tool": "terminal", "action": "run_terminal_command", "script_path": "tools/terminal.py", "params": ["command"], "example": {"tool_name": "terminal", "action": "run_terminal_command", "params": {"command": "ls -la"}}}
{"tool": "terminal", "action": "script", "script_path": "tools/terminal.py", "params": ["path"], "example": {"tool_name": "terminal", "action": "script", "params": {"path": "./deploy.sh"}}}
{"tool": "terminal", "action": "stream", "script_path": "tools/terminal.py", "params": ["command"], "example": {"tool_name": "terminal", "action": "stream", "params": {"command": "ping google.com"}}}
{"tool": "terminal", "action": "tail", "script_path": "tools/terminal.py", "params": ["command", "n"], "example": {"tool_name": "terminal", "action": "tail", "params": {"command": "cat log.txt", "n": 10}}}
{"tool": "unlock_tool", "action": "unlock_tool", "script_path": "tools/unlock_tool.py", "params": ["tool_name"]}
{"tool": "file_ops_tool", "action": "find_file", "script_path": "tools/file_ops_tool.py", "params": ["key", "filename"], "example": {"tool_name": "file_ops_tool", "action": "find_file", "params": {"key": "find_file", "filename": "example"}}}
{"tool": "file_ops_tool", "action": "read_file", "script_path": "tools/file_ops_tool.py", "params": ["key", "filename"], "example": {"tool_name": "file_ops_tool", "action": "read_file", "params": {"key": "read_file", "filename": "example"}}}
{"tool": "file_ops_tool", "action": "rename_file", "script_path": "tools/file_ops_tool.py", "params": ["key", "filename", "new_name"], "example": {"tool_name": "file_ops_tool", "action": "rename_file", "params": {"key": "rename_file", "filename": "example.txt", "new_name": "renamed.txt"}}}
{"tool": "file_ops_tool", "action": "move_file", "script_path": "tools/file_ops_tool.py", "params": ["key", "filename", "destination_dir"], "example": {"tool_name": "file_ops_tool", "action": "move_file", "params": {"key": "move_file", "filename": "example.txt", "destination_dir": "/orchestrate_user/archive"}}}
{"tool": "check_credits", "action": "check_credits", "script_path": "tools/check_credits.py", "params": []}

